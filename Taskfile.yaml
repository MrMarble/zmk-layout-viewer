# https://taskfile.dev

version: '3'

env:
  GOPROXY: https://proxy.golang.org,direct
  CGO_ENABLED: 1

tasks:
  dev:
    desc: Setup pre-commit hook
    cmds:
      - |
        echo "#!/bin/bash
        FILES=\$(git diff --cached --name-only --diff-filter=ACMR)

        gofumpt -l -w .
        golangci-lint run --new --fix

        git add $FILES" > .git/hooks/pre-commit
  setup:
    desc: Install dependencies
    cmds:
      - go mod tidy

  build:
    desc: Build the binary
    sources:
      - ./**/*.go
    generates:
      - ./goreleaser
    cmds:
      - go build ./cmd/zmk-viewer

  test:
    desc: Run tests
    env:
      LC_ALL: C
    vars:
      TEST_OPTIONS: '{{default "" .TEST_OPTIONS}}'
      SOURCE_FILES: '{{default "./..." .SOURCE_FILES}}'
      TEST_PATTERN: '{{default "." .TEST_PATTERN}}'
    cmds:
      - go test {{.TEST_OPTIONS}} -failfast -race -coverpkg=./... -covermode=atomic -coverprofile=coverage.txt {{.SOURCE_FILES}} -run {{.TEST_PATTERN}} -timeout=30s

  cover:
    desc: Open the cover tool
    cmds:
      - go tool cover -html=coverage.txt

  fmt:
    desc: gofumpt all code
    cmds:
      - gofumpt -w -l .

  lint:
    desc: Lint the code with golangci-lint
    cmds:
      - golangci-lint run --fix ./...

  ci:
    desc: Run all CI steps
    cmds:
      - task: setup
      - task: build
      - task: test
  
  default:
    desc: Runs the default tasks
    cmds:
      - task: ci

  release:
    desc: Create a new tag
    vars:
      NEXT:
        sh: svu n
    cmds:
      - git tag {{.NEXT}}
      - echo {{.NEXT}}
      - git push origin --tags


  goreleaser:
    desc: Run GoReleaser either in snapshot or release mode
    deps:
      - build
    vars:
      SNAPSHOT:
        sh: 'if [[ $GITHUB_REF != refs/tags/v* ]]; then echo "--snapshot"; fi'
    cmds:
      - goreleaser release --clean {{.SNAPSHOT}}


  cross:
    desc: Cross compile the binary
    vars:
      VERSION:
        sh: git describe --tags --always
      COMMIT:
        sh: git rev-parse --short HEAD
      DATE:
        sh: git log -1 --format=%cd --date=format:'%Y-%m-%d'
    cmds: 
      - |
        xgo -targets='darwin/amd64,darwin/arm64,linux/386,linux/amd64,linux/arm64,windows-6.0/*' \
          -ldflags='-s -w -X main.version={{.VERSION}} -X main.commit={{.COMMIT}} -X main.date={{.DATE}}' \
          -out zmk-viewer-{{.VERSION}} \
          ./cmd/zmk-viewer
      - find . -maxdepth 1  -name 'zmk-viewer-*' -exec bash -c 'mv $0  ${0/-[0-9]*-/-}' {} \;
